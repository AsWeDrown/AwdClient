#pragma once


#include <memory>
#include <SFML/Graphics.hpp>
#include "TileBlock.hpp"

namespace awd::game {

    class WorldData {
    public:
        /**
         * ID типа/номера измерения. Отсчёт с единицы.
         */
        uint32_t dimension;

        /**
         * Ширина измерения, в тайлах.
         */
        uint32_t width;

        /**
         * Высота измерения, в тайлах.
         */
        uint32_t height;

        /**
         * Базовый размер (и ширина, и высота) одного тайла, в пикселях.
         * Используется для выделения тайла по ID и координатам текстуры из tilemap.
         *
         * Для прорисовки на экране не подходит - см. displayTileSize.
         */
        uint32_t tileSize;

        /**
         * Размер (и ширина, и высота) одного тайла, в пикселях, используемый
         * при отображении тайла на экране игрока. Если рисовать мир на экране
         * с помощью тайлов базового размера (tileSize), придётся очень сильно
         * приближать фокус (View), в итоге отображая малюсенькие пиксели в виде
         * огромных кусков. Это сделает все анимации в мире (в т.ч. динамическое
         * перемещение фокуса камеры за игроком) резкими и неприятными глазу (будет
         * постоянное ощущение низкого FPS). Чтобы этого избежать, мир на экране
         * создаётся с увеличенными (отмасштабированными) тайлами, причём этот
         * масштаб будет зависеть от разрешения дисплея игрока (т.е. от renderScale).
         *
         * Для выделения (поиска) текстур в tilemap не подходит - см. tileSize.
         */
        uint32_t displayTileSize;

        /**
         * Базовая информация о загруженных тайлах (используется для
         * физики, взаимодействия с миром и пр. - не для прорисовки).
         */
        std::vector<std::shared_ptr<TileBlock>> tiles;

        /**
         * Vertex'ы (наборы Quad'ов (Quads)), необходимые для прорисовки мира (тайлов).
         */
        std::shared_ptr<sf::VertexArray> worldVertices;
    };

}
